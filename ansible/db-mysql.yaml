- name: Install and Configure MariaDB
  hosts: db-mysql
  become: yes

  vars:
    mariadb_root_password: "vprodbpass"

  tasks:
    - name: Install MariaDB server
      ansible.builtin.apt:
        name: mariadb-server
        state: present
        update_cache: yes

    - name: Install PyMySQL
      ansible.builtin.apt:
        name: python3-pymysql
        state: present

    - name: Ensure MariaDB service is started and enabled
      ansible.builtin.systemd:
        name: mariadb
        state: started
        enabled: yes

    # ✅ Set root password ONLY via unix socket (first time)
    - name: Set root password for MariaDB via unix_socket
      community.mysql.mysql_user:
        login_user: root
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: root
        password: "{{ mariadb_root_password }}"
        host_all: true
        check_implicit_admin: true
        state: present
      ignore_errors: true   # prevents failure if already configured

    # ✅ Ensure root password login works afterwards
    - name: Update root password login method
      ansible.builtin.shell: |
        mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mariadb_root_password }}';"
      args:
        executable: /bin/bash
      ignore_errors: true

    - name: Remove anonymous users
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ mariadb_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: ''
        host_all: yes
        state: absent

    - name: Remove test database
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ mariadb_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: test
        state: absent

    - name: Create application database
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ mariadb_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: accounts
        state: present

    - name: Copy database backup to server
      ansible.builtin.copy:
        src: db_backup.sql
        dest: /tmp/db_backup.sql
        owner: root
        group: root
        mode: '0644'

    - name: Restore database from backup
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ mariadb_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: accounts
        state: import
        target: /tmp/db_backup.sql
      ignore_errors: true

    - name: Remove temporary backup file
      ansible.builtin.file:
        path: /tmp/db_backup.sql
        state: absent

    - name: Verify MariaDB service is running
      ansible.builtin.shell: systemctl is-active mariadb
      register: mariadb_status
      changed_when: false

    - debug:
        msg: "MariaDB status: {{ mariadb_status.stdout }}"

